{"version":3,"file":"next-shield.esm.js","sources":["../src/components/ComponentShield.tsx","../src/libs/routes.ts","../src/components/NextShield.tsx"],"sourcesContent":["import React from 'react'\n\nimport {\n  ComponentShieldAuthProps,\n  ComponentShieldBaseProps,\n  ComponentShieldRBACProps,\n  ComponentShieldProps,\n} from '../types/Component'\n\n/**\n * üõ°Ô∏è A Shield for your Components, it handles when a component shows or not based on the auth state or the user's role\n *\n * @param ComponentShieldProps {@link ComponentShieldProps | see here}\n * @returns Children Components | {@link JSX.Element}\n *\n *\n * @example\n * ```tsx\n *  // Basic Example\n *  <ComponentShield showIf={true}>\n *    <p>You are authorized</p>\n *  </ComponentShield>\n *\n *  // Fallback Example\n *  <ComponentShield showIf={false} fallback={<p>You are unauthorized</p>}>\n *    <p>You are authorized</p>\n *  </ComponentShield>\n *\n *  // RBAC Example\n *  <ComponentShield RBAC showForRole=\"ADMIN\" userRole=\"ADMIN\">\n *    <p>You are an ADMIN</p>\n *  </ComponentShield>\n * ```\n *\n * @packageDocumentation\n */\n\nexport function ComponentShield(props: ComponentShieldBaseProps): JSX.Element\nexport function ComponentShield(props: ComponentShieldAuthProps): JSX.Element\nexport function ComponentShield(props: ComponentShieldRBACProps): JSX.Element\nexport function ComponentShield(props: ComponentShieldProps) {\n  const { showForRole, showIf, fallback = null, RBAC, userRole, children } = props\n\n  if (RBAC) return <>{showForRole === userRole ? children : null}</>\n  if (showIf) return <>{children}</>\n\n  return <>{fallback}</>\n}\n\n// function Debug() {\n//   return (\n//     <>\n// <ComponentShield showIf={true}>\n//   <p>Default</p>\n// </ComponentShield>\n//       <ComponentShield RBAC showForRole=\"\" userRole=\"\">\n//         <p>RBAC</p>\n//       </ComponentShield>\n//     </>\n//   )\n// }\n","import { RoleAccess } from '../types/props'\n\nexport function verifyPath(routes: string[] | undefined, uri: string) {\n  return routes?.some(route => route === uri)\n}\n\nexport function getAccessRoute(\n  RBAC: RoleAccess<string[]> | undefined,\n  userRole: string | undefined,\n  accessRoute: string | undefined\n) {\n  if (typeof accessRoute !== 'undefined') return accessRoute\n\n  if (RBAC && userRole) return RBAC[userRole].accessRoute\n\n  return '/'\n}\n","import React, { ReactNode, useEffect } from 'react'\n\nimport { NextShieldProps } from '../types/props'\nimport { verifyPath, getAccessRoute } from '../libs/routes'\n\n/**\n * üòâ The shield that every Next.js app needs\n *\n * @typeParam NextShieldProps - {@link NextShieldProps | see here}\n * @returns NextShield Component\n *\n * @example\n * ```tsx\n * import { Loading } from '@/components/routes/Loading'\n * import { useAuth } from '@/hooks/auth'\n *\n * export default function MyApp({ Component, pageProps }: AppProps) {\n *  const { isAuth, isLoading } = useAuth()\n *  const router = useRouter()\n *\n *  return (\n *    <NextShield\n *      isAuth={isAuth}\n *      isLoading={isLoading}\n *      router={router}\n *      privateRoutes={['/protected']}\n *      publicRoutes={['/']}\n *      hybridRoutes={['/products/[slug]']}\n *      LoadingComponent={<Loading />}\n *    >\n *      <Component {...pageProps} />\n *    </NextShield>\n *   )\n * }\n *\n * ```\n * @packageDocumentation\n */\n\nexport function NextShield<\n  PrivateRoutesList extends string[],\n  PublicRoutesList extends string[]\n>({\n  isAuth,\n  isLoading,\n  router: { pathname, replace },\n  loginRoute,\n  accessRoute,\n  privateRoutes,\n  publicRoutes,\n  hybridRoutes,\n  LoadingComponent,\n  RBAC,\n  userRole,\n  children,\n}: NextShieldProps<PrivateRoutesList, PublicRoutesList> & { children: ReactNode }) {\n  const pathIsPrivate = verifyPath(privateRoutes, pathname)\n  const pathIsPublic = verifyPath(publicRoutes, pathname)\n  const pathIsHybrid = verifyPath(hybridRoutes, pathname)\n  const pathIsAuthorized =\n    RBAC && userRole && verifyPath(RBAC[userRole].grantedRoutes, pathname)\n  const access = getAccessRoute(RBAC, userRole, accessRoute)\n\n  useEffect(() => {\n    if (!isAuth && !isLoading && pathIsPrivate) replace(loginRoute)\n    if (isAuth && !isLoading && pathIsPublic) replace(access)\n    if (isAuth && userRole && !isLoading && !pathIsHybrid && !pathIsAuthorized)\n      replace(access)\n  }, [\n    replace,\n    userRole,\n    access,\n    isAuth,\n    isLoading,\n    loginRoute,\n    pathIsPrivate,\n    pathIsPublic,\n    pathIsHybrid,\n    pathIsAuthorized,\n  ])\n\n  if (\n    ((isLoading || !isAuth) && pathIsPrivate) ||\n    ((isLoading || isAuth) && pathIsPublic) ||\n    ((isLoading || userRole) && !pathIsAuthorized && !pathIsHybrid) ||\n    (isLoading && pathIsHybrid)\n  )\n    return <>{LoadingComponent}</>\n\n  return <>{children}</>\n}\n"],"names":["ComponentShield","props","showForRole","showIf","fallback","RBAC","userRole","children","React","verifyPath","routes","uri","some","route","getAccessRoute","accessRoute","NextShield","isAuth","isLoading","router","pathname","replace","loginRoute","privateRoutes","publicRoutes","hybridRoutes","LoadingComponent","pathIsPrivate","pathIsPublic","pathIsHybrid","pathIsAuthorized","grantedRoutes","access","useEffect"],"mappings":"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"}